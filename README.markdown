# Генератор Презентаций

Веб-приложение на FastAPI для автоматической генерации презентаций PowerPoint (`.pptx`) на заданную тему с использованием языковой модели (LLM) и API генерации изображений. Поддерживает два режима: обычная генерация и генерация по шаблону.

## Особенности
- **Обычная генерация**:
  - Создаёт презентацию с титульным слайдом (тема презентации) и контентными слайдами.
  - Каждый контентный слайд содержит заголовок, описание (200–230 слов) и изображение, сгенерированные с помощью LLM и API изображений.
- **Генерация по шаблону**:
  - Использует файл `templates/template.pptx` с тремя слайдами:
    - **Титульный слайд**: Заменяется только текст темы, стили сохраняются.
    - **Основной слайд**: Дублируется для каждого контентного слайда с заменой заголовка, описания и изображения.
    - **Последний слайд**: Копируется без изменений, если присутствует.
  - Минимальное количество слайдов: 3, максимальное: 20.
- **Веб-интерфейс**: Простая форма с выбором режима, темы, количества слайдов и имени файла, стилизованная с Tailwind CSS.
- **Интеграция**:
  - LLM (по умолчанию Llama3) для генерации текста слайдов в формате JSON.
  - API изображений для генерации изображений размером 768x768 пикселей.
- **Очистка**: Временные файлы (изображения и выходные `.pptx`) удаляются при завершении работы сервера, шаблон сохраняется.
- **Логирование**: Используется `loguru` для диагностики ошибок и отладки.

## Требования
- Python 3.13
- Poetry для управления зависимостями
- Microsoft PowerPoint (для создания `template.pptx`, опционально)
- Доступ к серверу LLM (по умолчанию `http://192.168.0.59:8087`)
- Доступ к API изображений (по умолчанию `http://192.168.0.67:8009`)

## Установка
1. **Клонируйте репозиторий**:
   ```bash
   git clone <repository-url>
   cd generate-presentation
   ```

2. **Установите зависимости**:
   ```bash
   poetry install
   ```

3. **Настройте переменные окружения**:
   - Скопируйте `example.env` в `.env` и настройте:
     ```env
     MODEL=Llama3
     LLM_HOST=http://192.168.0.59
     LLM_PORT=8087
     IMAGE_API_HOST=http://192.168.0.67
     IMAGE_API_PORT=8009
     ```
   - Убедитесь, что указанные адреса LLM и API изображений доступны.

4. **Создайте шаблон** (для шаблонного режима):
   - В Microsoft PowerPoint создайте файл `templates/template.pptx` с тремя слайдами:
     - **Титульный слайд**: Плейсхолдер заголовка для темы.
     - **Основной слайд**: Плейсхолдеры для заголовка, текста и изображения (рекомендуется позиция изображения: `x=6 дюймов`, `y=1 дюйм`, ширина ~3 дюйма).
     - **Последний слайд**: Любой контент (например, "Спасибо за внимание!").
   - Сохраните файл в `generate-presentation/templates/`.
   - Проверьте шаблон:
     ```bash
     poetry run python check_template.py
     ```

## Использование
1. **Запустите сервер**:
   ```bash
   poetry run uvicorn generate_presentation.main:app --host 127.0.0.1 --port 8000 --reload
   ```

2. **Откройте веб-интерфейс**:
   - Перейдите по адресу `http://127.0.0.1:8000/static/index.html`.
   - Выберите режим (обычный или шаблонный).
   - Укажите тему (например, "Космос"), количество слайдов (1–20 для обычного, 3–20 для шаблонного) и имя файла (например, `my_presentation.pptx`).
   - Нажмите "Сгенерировать презентацию" для загрузки файла.

3. **Пример API-запроса**:
   ```bash
   curl -X POST "http://127.0.0.1:8000/generate-from-topic/" \
        -F "request={\"topic\": \"Космос\", \"slide_count\": 4, \"output_path\": \"my_presentation.pptx\", \"template_mode\": true}"
   ```

## Создание шаблона `template.pptx`
1. Откройте Microsoft PowerPoint.
2. **Титульный слайд**:
   - Используйте макет "Титульный слайд".
   - Добавьте плейсхолдер заголовка ("Щёлкните, чтобы добавить заголовок").
3. **Основной слайд**:
   - Используйте макет "Заголовок и объект".
   - Добавьте плейсхолдеры:
     - Заголовок: вверху слайда.
     - Текст: большое поле для описания.
     - Изображение: в режиме главного слайда (View → Slide Master) выберите макет, нажмите "Insert Placeholder" → "Picture", разместите в правой части (примерно `x=6 дюймов`, `y=1 дюйм`).
4. **Последний слайд**:
   - Добавьте любой контент (например, текст "Спасибо за внимание!").
5. Сохраните в `templates/template.pptx`.
6. Проверьте:
   ```bash
   poetry run python check_template.py
   ```
   Ожидаемый вывод:
   ```
   Шаблон загружен: templates/template.pptx
   Количество слайдов: 3
   Титульный слайд: Найден плейсхолдер заголовка
   Основной слайд:
     Плейсхолдер заголовка: найден
     Плейсхолдер текста: найден
     Плейсхолдер изображения: найден
   Последний слайд: Найден
   ```

## Тестирование
1. **Запустите тесты**:
   ```bash
   poetry run pytest
   ```
2. Тесты включают:
   - Проверку доступности API (`/`)
   - Генерацию презентации в обычном режиме
   - Генерацию в шаблонном режиме
   - Валидацию количества слайдов

## Структура проекта
```
generate-presentation/
├── generate_presentation/
│   ├── static/
│   │   └── index.html           # Веб-интерфейс
│   ├── __init__.py
│   ├── llm.py                   # Интеграция с LLM
│   ├── main.py                  # FastAPI приложение
│   ├── models.py                # Pydantic модели
│   ├── presentation_generator.py # Логика генерации презентаций
│   └── templates/
│       └── template.pptx        # Шаблон презентации
├── tests/
│   └── test_main.py             # Тесты API
├── .env                     # Переменные окружения
├── check_template.py        # Скрипт проверки шаблона
├── pyproject.toml           # Настройки Poetry
└── README.md                # Документация
```

## Зависимости
Указаны в `pyproject.toml`:
- `fastapi==0.115.0`
- `uvicorn==0.30.1`
- `python-pptx==1.0.2`
- `python-multipart==0.0.9`
- `python-dotenv==1.0.1`
- `openai==1.35.0`
- `loguru==0.7.2`
- `aiohttp==3.9.5`
- `pytest==8.3.5` и `httpx==0.27.0` (для тестов)

## Устранение неполадок
- **Шаблон не найден**: Убедитесь, что `templates/template.pptx` существует и содержит плейсхолдеры.
- **Изображения не вставляются**:
  - Проверьте доступность API изображений (`IMAGE_API_HOST`, `IMAGE_API_PORT`).
  - Убедитесь, что основной слайд в шаблоне имеет плейсхолдер изображения.
- **LLM не отвечает**: Проверьте настройки `LLM_HOST`, `LLM_PORT` и `MODEL` в `.env`.
- **Логи**: Используйте консольные логи (`loguru`) для диагностики.
- **Ошибки дублирования слайдов**: Проверьте макет основного слайда в `template.pptx` (View → Slide Master).